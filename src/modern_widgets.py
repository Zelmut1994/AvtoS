"""
–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –≤–∏–¥–∂–µ—Ç—ã —Å SVG –∏–∫–æ–Ω–∫–∞–º–∏
"""

from PySide6.QtWidgets import (
    QWidget, QVBoxLayout, QHBoxLayout, QLabel, QPushButton, 
    QLineEdit, QTableWidget, QFrame, QGroupBox, QComboBox,
    QTableWidgetItem, QHeaderView, QAbstractItemView
)
from PySide6.QtCore import Qt, Signal, QTimer
from PySide6.QtGui import QFont

try:
    from .icon_loader import get_icon, get_pixmap
    ICONS_AVAILABLE = True
    print("‚úÖ –ó–∞–≥—Ä—É–∑—á–∏–∫ –∏–∫–æ–Ω–æ–∫ –ø–æ–¥–∫–ª—é—á—ë–Ω")
except Exception:
    ICONS_AVAILABLE = False
    print("‚ö†Ô∏è –ó–∞–≥—Ä—É–∑—á–∏–∫ –∏–∫–æ–Ω–æ–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –º–µ—Ç–∫–∏")


class ModernButton(QPushButton):
    """–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞ —Å SVG –∏–∫–æ–Ω–∫–æ–π"""
    
    def __init__(self, text: str = "", icon_name: str = "", parent=None):
        super().__init__(text, parent)
        
        if icon_name and ICONS_AVAILABLE:
            self.setIcon(get_icon(icon_name))
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏
        self.setMinimumHeight(36)
        self.setStyleSheet("""
            QPushButton {
                padding: 8px 16px;
                border-radius: 6px;
                font-weight: 500;
            }
        """)

class ModernSearchBar(QWidget):
    """–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –ø–æ–∏—Å–∫–∞ —Å –∏–∫–æ–Ω–∫–æ–π"""
    
    textChanged = Signal(str)
    
    def __init__(self, placeholder: str = "–ü–æ–∏—Å–∫...", parent=None):
        super().__init__(parent)
        self.setup_ui(placeholder)
    
    def setup_ui(self, placeholder: str):
        layout = QHBoxLayout(self)
        layout.setContentsMargins(0, 0, 0, 0)
        
        # –ò–∫–æ–Ω–∫–∞ –ø–æ–∏—Å–∫–∞
        if ICONS_AVAILABLE:
            icon_label = QLabel()
            icon_label.setPixmap(get_pixmap("search", "#666", 16))
            layout.addWidget(icon_label)
        else:
            icon_label = QLabel("üîç")
            layout.addWidget(icon_label)
        
        # –ü–æ–ª–µ –≤–≤–æ–¥–∞
        self.search_input = QLineEdit()
        self.search_input.setPlaceholderText(placeholder)
        self.search_input.textChanged.connect(self.textChanged.emit)
        layout.addWidget(self.search_input)
        
        # –°—Ç–∏–ª–∏
        self.setStyleSheet("""
            QWidget {
                background: white;
                border: 1px solid #ddd;
                border-radius: 20px;
                padding: 4px 12px;
            }
            QLineEdit {
                border: none;
                background: transparent;
                padding: 4px;
            }
        """)


class ModernCard(QFrame):
    """–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞"""
    
    def __init__(self, title: str = "", parent=None):
        super().__init__(parent)
        self.setup_ui(title)
    
    def setup_ui(self, title: str):
        self.setFrameStyle(QFrame.Box)
        self.setStyleSheet("""
            QFrame {
                background: white;
                border: 1px solid #e0e0e0;
                border-radius: 8px;
                padding: 16px;
            }
        """)
        
        layout = QVBoxLayout(self)
        
        if title:
            title_label = QLabel(title)
            title_label.setStyleSheet("""
                QLabel {
                    font-size: 16px;
                    font-weight: bold;
                    color: #333;
                    margin-bottom: 8px;
                }
            """)
            layout.addWidget(title_label)
        
        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
        self.content_layout = QVBoxLayout()
        layout.addLayout(self.content_layout)
    
    def add_content(self, widget):
        """–î–æ–±–∞–≤–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ –∫–∞—Ä—Ç–æ—á–∫—É"""
        self.content_layout.addWidget(widget)


class ModernTable(QTableWidget):
    """–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º —Å—Ç–∏–ª–µ–º"""
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setup_style()
    
    def setup_style(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª—è —Ç–∞–±–ª–∏—Ü—ã"""
        self.setAlternatingRowColors(True)
        self.setSelectionBehavior(QAbstractItemView.SelectRows)
        self.setSortingEnabled(True)
        self.setGridStyle(Qt.NoPen)
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        header = self.horizontalHeader()
        header.setDefaultAlignment(Qt.AlignLeft)
        header.setStyleSheet("""
            QHeaderView::section {
                background: #f5f5f5;
                padding: 8px;
                border: none;
                border-bottom: 2px solid #e0e0e0;
                font-weight: 600;
            }
        """)
        
        # –°—Ç–∏–ª–∏ —Ç–∞–±–ª–∏—Ü—ã
        self.setStyleSheet("""
            QTableWidget {
                background: white;
                border: 1px solid #e0e0e0;
                border-radius: 6px;
                gridline-color: #f0f0f0;
            }
            QTableWidget::item {
                padding: 8px;
                border-bottom: 1px solid #f0f0f0;
            }
            QTableWidget::item:selected {
                background: #e3f2fd;
                color: #1976d2;
            }
            QTableWidget::item:hover {
                background: #f5f5f5;
            }
        """)


class ModernGroupBox(QGroupBox):
    """–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –≥—Ä—É–ø–ø–æ–≤–æ–π –±–ª–æ–∫"""
    
    def __init__(self, title: str = "", parent=None):
        super().__init__(title, parent)
        self.setup_style()
    
    def setup_style(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª—è –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ –±–ª–æ–∫–∞"""
        self.setStyleSheet("""
            QGroupBox {
                font-weight: bold;
                border: 2px solid #e0e0e0;
                border-radius: 8px;
                margin: 12px 0px;
                padding-top: 12px;
            }
            QGroupBox::title {
                subcontrol-origin: margin;
                left: 12px;
                padding: 0 8px 0 8px;
                background: white;
                color: #333;
            }
        """)


class ModernComboBox(QComboBox):
    """–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫"""
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setup_style()
    
    def setup_style(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞"""
        self.setMinimumHeight(36)
        self.setStyleSheet("""
            QComboBox {
                border: 1px solid #ddd;
                border-radius: 6px;
                padding: 8px 12px;
                background: white;
                min-width: 120px;
            }
            QComboBox:hover {
                border-color: #2196F3;
            }
            QComboBox:focus {
                border-color: #2196F3;
                outline: none;
            }
            QComboBox::drop-down {
                border: none;
            }
            QComboBox::down-arrow {
                image: none;
                border: none;
                width: 12px;
                height: 12px;
            }
            QComboBox QAbstractItemView {
                border: 1px solid #ddd;
                border-radius: 6px;
                background: white;
                selection-background-color: #e3f2fd;
            }
        """)


class ModernLineEdit(QLineEdit):
    """–°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –ø–æ–ª–µ –≤–≤–æ–¥–∞"""
    
    def __init__(self, placeholder: str = "", parent=None):
        super().__init__(parent)
        if placeholder:
            self.setPlaceholderText(placeholder)
        self.setup_style()
    
    def setup_style(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª—è –ø–æ–ª—è –≤–≤–æ–¥–∞"""
        self.setMinimumHeight(36)
        self.setStyleSheet("""
            QLineEdit {
                border: 1px solid #ddd;
                border-radius: 6px;
                padding: 8px 12px;
                background: white;
                font-size: 14px;
            }
            QLineEdit:hover {
                border-color: #2196F3;
            }
            QLineEdit:focus {
                border-color: #2196F3;
                outline: none;
                box-shadow: 0 0 0 2px rgba(33, 150, 243, 0.2);
            }
        """)


class StatusIndicator(QWidget):
    """–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç–∞—Ç—É—Å–∞ —Å —Ü–≤–µ—Ç–æ–≤–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π"""
    
    def __init__(self, status: str = "normal", text: str = "", parent=None):
        super().__init__(parent)
        self.setup_ui(status, text)
    
    def setup_ui(self, status: str, text: str):
        layout = QHBoxLayout(self)
        layout.setContentsMargins(8, 4, 8, 4)
        
        # –¶–≤–µ—Ç–æ–≤–æ–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
        indicator = QLabel("‚óè")
        colors = {
            "success": "#4caf50",
            "warning": "#ff9800", 
            "error": "#f44336",
            "info": "#2196f3",
            "normal": "#9e9e9e"
        }
        
        color = colors.get(status, colors["normal"])
        indicator.setStyleSheet(f"color: {color}; font-size: 16px;")
        layout.addWidget(indicator)
        
        # –¢–µ–∫—Å—Ç
        if text:
            text_label = QLabel(text)
            text_label.setStyleSheet("color: #666; font-size: 13px;")
            layout.addWidget(text_label)
        
        layout.addStretch()
        
        # –°—Ç–∏–ª—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
        self.setStyleSheet("""
            QWidget {
                background: #f9f9f9;
                border-radius: 12px;
            }
        """)


class LoadingSpinner(QLabel):
    """–ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏"""
    
    def __init__(self, size: int = 24, parent=None):
        super().__init__(parent)
        self.size = size
        self.angle = 0
        self.setup_ui()
        
        # –¢–∞–π–º–µ—Ä –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
        self.timer = QTimer()
        self.timer.timeout.connect(self.rotate)
    
    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å–ø–∏–Ω–Ω–µ—Ä–∞"""
        self.setFixedSize(self.size, self.size)
        self.setText("‚ü≥")
        self.setAlignment(Qt.AlignCenter)
        self.setStyleSheet(f"""
            QLabel {{
                font-size: {self.size - 4}px;
                color: #2196F3;
            }}
        """)
    
    def start(self):
        """–ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é"""
        self.timer.start(100)  # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 100–º—Å
    
    def stop(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é"""
        self.timer.stop()
        self.angle = 0
    
    def rotate(self):
        """–ü–æ–≤–æ—Ä–æ—Ç —Å–ø–∏–Ω–Ω–µ—Ä–∞"""
        self.angle = (self.angle + 30) % 360
        # –ü—Ä–æ—Å—Ç–∞—è –∞–Ω–∏–º–∞—Ü–∏—è —á–µ—Ä–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–∞
        symbols = ["‚ü≥", "‚ü≤", "‚ü≥", "‚ü≤"]
        symbol_index = (self.angle // 90) % len(symbols)
        self.setText(symbols[symbol_index])


class ModernProgressBar(QWidget):
    """–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä"""
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self._value = 0
        self._maximum = 100
        self.setup_ui()
    
    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        self.setMinimumHeight(8)
        self.setMaximumHeight(8)
        self.setStyleSheet("""
            QWidget {
                background: #e0e0e0;
                border-radius: 4px;
            }
        """)
    
    def setValue(self, value: int):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"""
        self._value = max(0, min(value, self._maximum))
        self.update()
    
    def setMaximum(self, maximum: int):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ"""
        self._maximum = max(1, maximum)
        self.update()
    
    def value(self) -> int:
        """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ"""
        return self._value
    
    def maximum(self) -> int:
        """–ü–æ–ª—É—á–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ"""
        return self._maximum
    
    def paintEvent(self, event):
        """–û—Ç—Ä–∏—Å–æ–≤–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞"""
        super().paintEvent(event)
        
        if self._maximum <= 0:
            return
        
        from PySide6.QtGui import QPainter, QColor
        
        painter = QPainter(self)
        painter.setRenderHint(QPainter.Antialiasing)
        
        # –§–æ–Ω
        painter.setBrush(QColor("#e0e0e0"))
        painter.setPen(Qt.NoPen)
        painter.drawRoundedRect(self.rect(), 4, 4)
        
        # –ü—Ä–æ–≥—Ä–µ—Å—Å
        if self._value > 0:
            progress_width = int((self._value / self._maximum) * self.width())
            progress_rect = self.rect()
            progress_rect.setWidth(progress_width)
            
            painter.setBrush(QColor("#2196F3"))
            painter.drawRoundedRect(progress_rect, 4, 4)
