#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ —Ä–µ—Å—É—Ä—Å–æ–≤ Qt
"""

import os
import subprocess
import sys
from pathlib import Path

def find_pyside_rcc():
    """–ù–∞–π—Ç–∏ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª pyside6-rcc"""
    # –í–æ–∑–º–æ–∂–Ω—ã–µ –∏–º–µ–Ω–∞ –∫–æ–º–∞–Ω–¥—ã
    possible_names = ['pyside6-rcc', 'pyside6-rcc.exe']
    
    # –ü–æ–∏—Å–∫ –≤ PATH
    for name in possible_names:
        try:
            result = subprocess.run(['which', name] if os.name != 'nt' else ['where', name], 
                                   capture_output=True, text=True)
            if result.returncode == 0:
                return name
        except:
            pass
    
    # –ü–æ–∏—Å–∫ –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö Python
    python_path = Path(sys.executable).parent
    for name in possible_names:
        rcc_path = python_path / name
        if rcc_path.exists():
            return str(rcc_path)
        
        # –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º Scripts (Windows)
        scripts_path = python_path / 'Scripts' / name
        if scripts_path.exists():
            return str(scripts_path)
    
    return None

def compile_resources():
    """–ö–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å —Ä–µ—Å—É—Ä—Å—ã Qt –≤ Python –º–æ–¥—É–ª—å"""
    print("üî® –ö–æ–º–ø–∏–ª—è—Ü–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤ Qt...")
    
    # –ü—É—Ç–∏
    project_root = Path(__file__).parent.parent
    qrc_file = project_root / "resources" / "styles.qrc"
    output_file = project_root / "src" / "resources_rc.py"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ QRC —Ñ–∞–π–ª–∞
    if not qrc_file.exists():
        print(f"‚ùå –§–∞–π–ª —Ä–µ—Å—É—Ä—Å–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω: {qrc_file}")
        return False
    
    # –ù–∞—Ö–æ–¥–∏–º pyside6-rcc
    rcc_cmd = find_pyside_rcc()
    if not rcc_cmd:
        print("‚ùå –ö–æ–º–∞–Ω–¥–∞ pyside6-rcc –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ PySide6: pip install PySide6")
        return False
    
    # –ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º —Ä–µ—Å—É—Ä—Å—ã
    try:
        cmd = [rcc_cmd, str(qrc_file), '-o', str(output_file)]
        print(f"üöÄ –í—ã–ø–æ–ª–Ω—è–µ–º: {' '.join(cmd)}")
        
        result = subprocess.run(cmd, capture_output=True, text=True)
        
        if result.returncode == 0:
            print(f"‚úÖ –†–µ—Å—É—Ä—Å—ã —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω—ã: {output_file}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏: {result.stderr}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏: {e}")
        return False

def check_qss_files():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ QSS —Ñ–∞–π–ª–æ–≤"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ QSS —Ñ–∞–π–ª–æ–≤...")
    
    project_root = Path(__file__).parent.parent
    styles_dir = project_root / "resources" / "styles"
    
    qss_files = [
        "main.qss",
        "tabs.qss", 
        "buttons.qss",
        "tables.qss",
        "forms.qss"
    ]
    
    all_exist = True
    for filename in qss_files:
        filepath = styles_dir / filename
        if filepath.exists():
            print(f"‚úÖ {filename}")
        else:
            print(f"‚ùå {filename} - –Ω–µ –Ω–∞–π–¥–µ–Ω")
            all_exist = False
    
    return all_exist

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üé® –ö–æ–º–ø–∏–ª—è—Ü–∏—è —Å—Ç–∏–ª–µ–π AutoParts")
    print("=" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º QSS —Ñ–∞–π–ª—ã
    if not check_qss_files():
        print("\n‚ùå –ù–µ –≤—Å–µ QSS —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã. –ü—Ä–µ—Ä–≤–∞–Ω–æ.")
        return 1
    
    # –ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º —Ä–µ—Å—É—Ä—Å—ã
    if compile_resources():
        print("\nüéâ –ö–æ–º–ø–∏–ª—è—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ—Å—É—Ä—Å—ã –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏")
        return 0
    else:
        print("\n‚ùå –ö–æ–º–ø–∏–ª—è—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å")
        return 1

if __name__ == "__main__":
    sys.exit(main()) 