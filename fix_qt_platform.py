#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å Qt platform plugin
"""
import os
import sys
import shutil
import urllib.request
import zipfile

def download_qt_fix():
    """–°–∫–∞—á–∞—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ Qt –±–∏–±–ª–∏–æ—Ç–µ–∫–∏"""
    print("üì• –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è Qt...")
    
    # URL –∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º (–ø—Ä–∏–º–µ—Ä)
    # –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏
    fixes = {
        'qwindows.dll': 'https://example.com/qwindows_fixed.dll',
        # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Qt5 –≤–µ—Ä—Å–∏—é qwindows.dll
    }
    
    print("‚ö†Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.")
    print("   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–¥–Ω–æ –∏–∑ —Ä–µ—à–µ–Ω–∏–π –Ω–∏–∂–µ:")
    
    return False

def solution_1_downgrade_qt(app_dir):
    """–†–µ—à–µ–Ω–∏–µ 1: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Qt5 –≤–º–µ—Å—Ç–æ Qt6"""
    print("\nüîß –†–µ—à–µ–Ω–∏–µ 1: –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ Qt5")
    print("1. –î–µ–∏–Ω—Å—Ç–∞–ª–ª–∏—Ä—É–π—Ç–µ PySide6:")
    print("   pip uninstall PySide6")
    print("2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ PySide2 (Qt5):")
    print("   pip install PySide2")
    print("3. –ò–∑–º–µ–Ω–∏—Ç–µ –∏–º–ø–æ—Ä—Ç—ã –≤ –∫–æ–¥–µ —Å PySide6 –Ω–∞ PySide2")
    print("4. –ü–µ—Ä–µ—Å–æ–±–µ—Ä–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")

def solution_2_patch_dll(app_dir):
    """–†–µ—à–µ–Ω–∏–µ 2: –ü–∞—Ç—á qwindows.dll"""
    print("\nüîß –†–µ—à–µ–Ω–∏–µ 2: –ü–∞—Ç—á qwindows.dll")
    
    # –°–æ–∑–¥–∞–µ–º –æ–±–µ—Ä—Ç–∫—É –¥–ª—è qwindows.dll
    wrapper_code = """
#include <windows.h>

// –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–µ–π —Ñ—É–Ω–∫—Ü–∏–∏
extern "C" __declspec(dllexport) 
HRESULT WINAPI UiaRaiseNotificationEvent(void* provider, int notificationKind, 
                                         int notificationProcessing, 
                                         BSTR displayString, BSTR activityId) {
    return S_OK; // –ü—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—Ö
}
"""
    
    print("–î–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω—É–∂–Ω–æ:")
    print("1. –°–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å DLL-–æ–±–µ—Ä—Ç–∫—É —Å –∑–∞–≥–ª—É—à–∫–æ–π –¥–ª—è UiaRaiseNotificationEvent")
    print("2. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å hex-—Ä–µ–¥–∞–∫—Ç–æ—Ä –¥–ª—è –ø–∞—Ç—á–∞ –∏–º–ø–æ—Ä—Ç–æ–≤ –≤ qwindows.dll")
    print("3. –ò–ª–∏ –Ω–∞–π—Ç–∏ qwindows.dll –æ—Ç Qt 5.15 (–æ–±—ã—á–Ω–æ —Å–æ–≤–º–µ—Å—Ç–∏–º)")

def solution_3_windows_update(app_dir):
    """–†–µ—à–µ–Ω–∏–µ 3: –û–±–Ω–æ–≤–∏—Ç—å Windows"""
    print("\nüîß –†–µ—à–µ–Ω–∏–µ 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Windows")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã ‚Üí –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å")
    print("2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Windows")
    print("3. –û—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ KB4601319 –∏–ª–∏ –Ω–æ–≤–µ–µ")
    print("4. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –∫–æ–º–ø—å—é—Ç–µ—Ä")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Windows
    try:
        import platform
        win_ver = platform.win32_ver()
        print(f"\n–í–∞—à–∞ –≤–µ—Ä—Å–∏—è Windows: {win_ver[0]} {win_ver[1]}")
        
        # UiaRaiseNotificationEvent –ø–æ—è–≤–∏–ª–∞—Å—å –≤ Windows 10 –≤–µ—Ä—Å–∏–∏ 1709
        if win_ver[1] < '10.0.16299':
            print("‚ö†Ô∏è –í–∞—à–∞ –≤–µ—Ä—Å–∏—è Windows —Å–ª–∏—à–∫–æ–º —Å—Ç–∞—Ä–∞—è!")
            print("   –¢—Ä–µ–±—É–µ—Ç—Å—è Windows 10 –≤–µ—Ä—Å–∏–∏ 1709 –∏–ª–∏ –Ω–æ–≤–µ–µ")
    except:
        pass

def solution_4_use_alternative_platform(app_dir):
    """–†–µ—à–µ–Ω–∏–µ 4: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É"""
    print("\nüîß –†–µ—à–µ–Ω–∏–µ 4: –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ã–π –ø–ª–∞–≥–∏–Ω")
    
    # –°–æ–∑–¥–∞–µ–º –±–∞—Ç–Ω–∏–∫ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å minimal platform
    batch_content = """@echo off
cd /d "%~dp0"

REM –ò—Å–ø–æ–ª—å–∑—É–µ–º minimal –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –≤–º–µ—Å—Ç–æ windows
set QT_QPA_PLATFORM=minimal
set QT_PLUGIN_PATH=%~dp0_internal

echo –ó–∞–ø—É—Å–∫ —Å minimal –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π (–±–µ–∑ GUI)...
AutoParts.exe

if errorlevel 1 (
    echo –ü–æ–ø—Ä–æ–±—É–µ–º offscreen –ø–ª–∞—Ç—Ñ–æ—Ä–º—É...
    set QT_QPA_PLATFORM=offscreen
    AutoParts.exe
)
pause
"""
    
    batch_path = os.path.join(app_dir, "AutoParts_minimal.bat")
    with open(batch_path, 'w') as f:
        f.write(batch_content)
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω: {batch_path}")
    print("   –í–Ω–∏–º–∞–Ω–∏–µ: minimal –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–∫–æ–Ω!")

def solution_5_copy_from_working_system(app_dir):
    """–†–µ—à–µ–Ω–∏–µ 5: –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å —Ä–∞–±–æ—á–µ–π —Å–∏—Å—Ç–µ–º—ã"""
    print("\nüîß –†–µ—à–µ–Ω–∏–µ 5: –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –¥—Ä—É–≥–æ–π —Å–∏—Å—Ç–µ–º—ã")
    print("–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–æ–º–ø—å—é—Ç–µ—Ä—É –≥–¥–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:")
    print("1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ qwindows.dll —Å —Ä–∞–±–æ—á–µ–≥–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞")
    print("2. –ñ–µ–ª–∞—Ç–µ–ª—å–Ω–æ —Å Windows 10 –≤–µ—Ä—Å–∏–∏ 1909 –∏–ª–∏ –Ω–æ–≤–µ–µ")
    print("3. –ü—É—Ç—å: C:\\Python3X\\Lib\\site-packages\\PySide6\\plugins\\platforms\\")
    print("4. –ó–∞–º–µ–Ω–∏—Ç–µ —Ñ–∞–π–ª –≤ –≤–∞—à–µ–π —Å–±–æ—Ä–∫–µ")

def apply_quick_fix(app_dir):
    """–ë—ã—Å—Ç—Ä–æ–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ"""
    print("\n‚ö° –ü—Ä–∏–º–µ–Ω—è–µ–º –±—ã—Å—Ç—Ä–æ–µ —Ä–µ—à–µ–Ω–∏–µ...")
    
    # –°–æ–∑–¥–∞–µ–º –º–∞–Ω–∏—Ñ–µ—Å—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    manifest_content = """<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
  <compatibility xmlns="urn:schemas-microsoft-com:compatibility.v1">
    <application>
      <!-- Windows 10 -->
      <supportedOS Id="{8e0f7a12-bfb3-4fe8-b9a5-48fd50a15a9a}"/>
      <!-- Windows 8.1 -->
      <supportedOS Id="{1f676c76-80e1-4239-95bb-83d0f6d0da78}"/>
      <!-- Windows 8 -->
      <supportedOS Id="{4a2f28e3-53b9-4441-ba9c-d69d4a4a6e38}"/>
      <!-- Windows 7 -->
      <supportedOS Id="{35138b9a-5d96-4fbd-8e2d-a2440225f93a}"/>
    </application>
  </compatibility>
  <dependency>
    <dependentAssembly>
      <assemblyIdentity type="win32" name="Microsoft.Windows.Common-Controls" 
                        version="6.0.0.0" processorArchitecture="*" 
                        publicKeyToken="6595b64144ccf1df" language="*"/>
    </dependentAssembly>
  </dependency>
</assembly>"""
    
    manifest_path = os.path.join(app_dir, "AutoParts.exe.manifest")
    with open(manifest_path, 'w') as f:
        f.write(manifest_content)
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω –º–∞–Ω–∏—Ñ–µ—Å—Ç: {manifest_path}")
    
    # –°–æ–∑–¥–∞–µ–º –±–∞—Ç–Ω–∏–∫ —Å –æ–±—Ö–æ–¥–æ–º –ø—Ä–æ–±–ª–µ–º—ã
    workaround_batch = """@echo off
cd /d "%~dp0"

REM –û—Ç–∫–ª—é—á–∞–µ–º UI Automation
set QT_DISABLE_WINDOWSCONTEXT=1
set QT_QPA_PLATFORM=windows:fontengine=freetype

REM –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É—Ç–∏
set QT_PLUGIN_PATH=%~dp0_internal
set QT_QPA_PLATFORM_PLUGIN_PATH=%~dp0_internal\\platforms

REM –ó–∞–ø—É—Å–∫–∞–µ–º —Å –æ–±—Ö–æ–¥–æ–º
echo –ó–∞–ø—É—Å–∫ —Å –æ–±—Ö–æ–¥–æ–º UI Automation...
AutoParts.exe

if errorlevel 1 (
    echo.
    echo –ï—Å–ª–∏ –Ω–µ –ø–æ–º–æ–≥–ª–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ:
    echo 1. –û–±–Ω–æ–≤–∏—Ç—å Windows –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏
    echo 2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Windows 10 –≤–µ—Ä—Å–∏–∏ 1909 –∏–ª–∏ –Ω–æ–≤–µ–µ
    echo 3. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å PySide2 –≤–º–µ—Å—Ç–æ PySide6
    pause
)
"""
    
    workaround_path = os.path.join(app_dir, "AutoParts_workaround.bat")
    with open(workaround_path, 'w') as f:
        f.write(workaround_batch)
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω –æ–±—Ö–æ–¥–Ω–æ–π –∑–∞–ø—É—Å–∫: {workaround_path}")

def main():
    print("=" * 60)
    print("üîß Qt Platform Plugin Fix Tool")
    print("=" * 60)
    print("\n‚ùå –ü—Ä–æ–±–ª–µ–º–∞: qwindows.dll —Ç—Ä–µ–±—É–µ—Ç UiaRaiseNotificationEvent")
    print("   –∫–æ—Ç–æ—Ä–∞—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –≤–∞—à–µ–π –≤–µ—Ä—Å–∏–∏ Windows")
    
    if len(sys.argv) > 1:
        app_dir = sys.argv[1]
    else:
        app_dir = "build_new/dist/AutoParts"
    
    if not os.path.exists(app_dir):
        print(f"‚ùå –ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {app_dir}")
        return
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –±—ã—Å—Ç—Ä–æ–µ —Ä–µ—à–µ–Ω–∏–µ
    apply_quick_fix(app_dir)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ä–µ—à–µ–Ω–∏—è
    print("\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
    solution_3_windows_update(app_dir)
    solution_2_patch_dll(app_dir)
    solution_1_downgrade_qt(app_dir)
    solution_4_use_alternative_platform(app_dir)
    solution_5_copy_from_working_system(app_dir)
    
    print("\n" + "=" * 60)
    print("üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. –°–Ω–∞—á–∞–ª–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ AutoParts_workaround.bat")
    print("2. –ï—Å–ª–∏ –Ω–µ –ø–æ–º–æ–∂–µ—Ç - –æ–±–Ω–æ–≤–∏—Ç–µ Windows")
    print("3. –ö—Ä–∞–π–Ω–∏–π —Å–ª—É—á–∞–π - –ø–µ—Ä–µ—Å–æ–±–µ—Ä–∏—Ç–µ —Å PySide2")
    print("=" * 60)

if __name__ == "__main__":
    main()